	public void memberUpdate(Member m , HttpServletRequest req){
		MultipartRequest mr = null;
		String memberUpdatePath = req.getSession().getServletContext().getRealPath(memberUpdatePath2);
		try {
			mr = new MultipartRequest(req, memberUpdatePath, 50 * 1024 * 1024, "utf-8", new DefaultFileRenamePolicy());
		} catch (Exception e) {
			e.printStackTrace();
			req.setAttribute("result", "사진 수정 실패");
			return;
		}
		
		try {
			Member loginMember = (Member) req.getSession().getAttribute("loginMember");
			
			m.setHm_id(mr.getParameter("hm_id"));
			m.setHm_pw(mr.getParameter("hm_pw"));
			m.setHm_nickname(mr.getParameter("hm_nickname"));
			m.setHm_name(mr.getParameter("hm_name"));
			m.setHm_email(mr.getParameter("hm_email"));
			m.setHm_pw_question(mr.getParameter("hm_pw_question"));
			m.setHm_pw_answer(mr.getParameter("hm_pw_answer"));
			m.setHm_selfIntroduction(mr.getParameter("hm_selfIntroduction"));
			
			String hm_photo_front = mr.getFilesystemName("hm_photo_front");
			String hm_photo_back = mr.getFilesystemName("hm_photo_back");
			if (hm_photo_front != null){
				hm_photo_front = URLEncoder.encode(hm_photo_front, "utf-8");
				hm_photo_front = hm_photo_front.replace("+", " ");
				
				String hm_photo_front_before = loginMember.getHm_photo_front();
				
				
				hm_photo_front_before = URLDecoder.decode(hm_photo_front_before, "utf-8");
								
				if(!hm_photo_front_before.equals("photo_front.png")){
					f = new File(memberUpdatePath + "/" + hm_photo_front_before);
					f.delete();					
				}
				m.setHm_photo_front(hm_photo_front);
				ss.getMapper(MemberMapper.class).memberSNSUpdate(m);
				ss.getMapper(MemberMapper.class).memberSNSRelUpdate(m);
			} else {
				hm_photo_front = loginMember.getHm_photo_front();
				m.setHm_photo_front(hm_photo_front);
			} 
			
			if (hm_photo_back != null) {
				hm_photo_back = URLEncoder.encode(hm_photo_back, "utf-8");
				hm_photo_back = hm_photo_back.replace("+", " ");
				
				String hm_photo_back_before = loginMember.getHm_photo_back();
				hm_photo_back_before = URLDecoder.decode(hm_photo_back_before, "utf-8");
				
				if (!hm_photo_back_before.equals("photo_back.jpg")) {
					f = new File(memberUpdatePath + "/" + hm_photo_back_before);
					f.delete();										
				}
				
				
			} else {
				hm_photo_back = loginMember.getHm_photo_back();
			} 
			m.setHm_photo_back(hm_photo_back);
			
			if (ss.getMapper(MemberMapper.class).memberUpdate(m) == 1) {
				req.getSession().setAttribute("loginMember", m);
			} 
			
		} catch (Exception e) {
			e.printStackTrace();
			req.setAttribute("memberUpdate", "실패");
			f = new File(memberUpdatePath + "/" + mr.getFilesystemName("hm_photo_front"));
			f = new File(memberUpdatePath + "/" + mr.getFilesystemName("hm_photo_back"));			
			f.delete();
		}	
	}
